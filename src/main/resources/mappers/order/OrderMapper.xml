<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.soprj.sharedone_prj.mapper.order.OrderMapper">

    <select id="buyerSelect" resultType="com.soprj.sharedone_prj.domain.buyer.BuyerDto">
        SELECT DISTINCT p.m_buyer_id,b.m_buyer_name
        FROM  m_price p LEFT JOIN m_buyer b ON b.m_buyer_id = p.m_buyer_id;
    </select>
    <select id="buyerList" resultType="com.soprj.sharedone_prj.domain.buyer.BuyerDto">
        SELECT m_buyer_region,
        m_buyer_address,
        m_buyer_number,
        m_buyer_currency
        FROM m_buyer
        WHERE m_buyer_id = #{m_Buyer_Id}
    </select>
    <select id="itemSelect" resultType="com.soprj.sharedone_prj.domain.item.ItemDto">
        SELECT m_item_id,
        m_item_name
        FROM m_item
    </select>
    <!--    <select id="itemList" resultType="com.soprj.sharedone_prj.domain.item.ItemDto">-->
    <!--&lt;!&ndash;        SELECT  i.m_item_name,&ndash;&gt;-->
    <!--&lt;!&ndash;                i.m_item_group,&ndash;&gt;-->
    <!--&lt;!&ndash;                i.m_item_manufacturer,&ndash;&gt;-->
    <!--&lt;!&ndash;                p.m_price_lastPrice&ndash;&gt;-->
    <!--&lt;!&ndash;        FROM m_item i JOIN m_price p ON i.m_item_id = p.m_item_id&ndash;&gt;-->
    <!--&lt;!&ndash;        WHERE i.m_item_id = #{m_item_id}&ndash;&gt;-->

    <!--        SELECT  p.m_price_lastPrice,-->
    <!--        i.m_item_name,-->
    <!--        i.m_item_group,-->
    <!--        i.m_item_manufacturer-->
    <!--        FROM m_price p LEFT JOIN m_item i ON p.m_item_id = i.m_item_id-->
    <!--        WHERE m_buyer_id = #{m_buyer_id}-->
    <!--        AND #{m_order_inserted} >= m_price_startPeriod-->
    <!--        AND m_price_lastPeriod >= #{m_order_inserted}-->
    <!--        AND p.m_item_id = #{m_item_id};-->
    <!--    </select>-->
    <select id="itemListForDropDown" resultType="com.soprj.sharedone_prj.domain.order.ItemListVO">
        SELECT DISTINCT m_price.m_item_id, m_item.m_item_name
        FROM m_price LEFT JOIN m_item ON m_price.m_item_id = m_item.m_item_id
        WHERE m_buyer_id = #{m_buyer_id}
        AND #{m_order_inserted} >= m_price_startPeriod
        AND m_price_lastPeriod >= #{m_order_inserted}
    </select>
    <select id="orderPrice" resultType="com.soprj.sharedone_prj.domain.order.OrderPriceVO">
        SELECT p.m_price_lastPrice,
        i.m_item_name,
        i.m_item_group,
        i.m_item_manufacturer
        FROM m_price p LEFT JOIN m_item i ON p.m_item_id = i.m_item_id
        WHERE m_buyer_id = #{m_buyer_id}
        AND #{m_order_inserted} >= m_price_startPeriod
        AND m_price_lastPeriod >= #{m_order_inserted}
        AND p.m_item_id = #{m_item_id};
    </select>
    <insert id="orderInsert">

    </insert>
    <insert id="addDataHeader" useGeneratedKeys="true" keyProperty="m_order_id">
        INSERT INTO m_order_header (
            m_order_inserted,
            m_buyer_id,
            m_order_buyerName,
            m_order_buyerRegion,
            m_order_buyerAddress,
            m_order_buyerNumber,
            m_order_buyerCurrency,
            m_order_comment,
            m_order_sumPrice,
            m_order_status)
        VALUES(
            #{m_order_inserted},
            #{m_buyer_id},
            #{m_order_buyerName},
            #{m_order_buyerRegion},
            #{m_order_buyerAddress},
            #{m_order_buyerNumber},
            #{m_order_buyerCurrency},
            #{m_order_comment},
            #{m_order_sumPrice},
            '승인요청')
        <selectKey keyProperty="m_order_id" resultType="int" order="BEFORE">
            SELECT IFNULL(MAX(m_order_id+1), 1) FROM m_order_header
        </selectKey>
    </insert>
    <insert id="addDataItem">
        INSERT INTO
        m_order_item (
            m_order_id,
            m_order_count,
            m_order_price,
            m_order_itemId,
            m_order_itemName,
            m_order_itemGroup,
            m_order_itemManufacturer,
            m_order_totalPrice )
        VALUES (
            #{m_order_id},
            #{m_order_count},
            #{m_order_price},
            #{m_order_itemId},
            #{m_order_itemName},
            #{m_order_itemGroup},
            #{m_order_itemManufacturer},
            #{m_order_totalPrice} )
    </insert>
    <insert id="storageHeaderAdd">
        INSERT INTO m_order_header (
        m_order_inserted,
        m_buyer_id,
        m_order_buyerName,
        m_order_buyerRegion,
        m_order_buyerAddress,
        m_order_buyerNumber,
        m_order_buyerCurrency,
        m_order_comment,
        m_order_sumPrice,
        m_order_status)
        VALUES(
        #{m_order_inserted},
        #{m_buyer_id},
        #{m_order_buyerName},
        #{m_order_buyerRegion},
        #{m_order_buyerAddress},
        #{m_order_buyerNumber},
        #{m_order_buyerCurrency},
        #{m_order_comment},
        #{m_order_sumPrice},
        '생성중')
        <selectKey keyProperty="m_order_id" resultType="int" order="BEFORE">
            SELECT IFNULL(MAX(m_order_id+1), 1) FROM m_order_header
        </selectKey>
    </insert>
    <insert id="storageItemAdd">
        INSERT INTO
        m_order_item (
        m_order_id,
        m_order_count,
        m_order_price,
        m_order_itemId,
        m_order_itemName,
        m_order_itemGroup,
        m_order_itemManufacturer,
        m_order_totalPrice )
        VALUES (
        #{m_order_id},
        #{m_order_count},
        #{m_order_price},
        #{m_order_itemId},
        #{m_order_itemName},
        #{m_order_itemGroup},
        #{m_order_itemManufacturer},
        #{m_order_totalPrice} )
    </insert>


    <!--주문관리 리스트 보여주기-->
    <select id="orderList" resultType="com.soprj.sharedone_prj.domain.order.OrderDto">
        SELECT
            m_order_id,
            m_buyer_id,
            m_order_buyerName,
            m_order_sumPrice,
            m_order_status,
            m_order_comment,
            m_order_buyerCurrency
        FROM m_order_header
        ORDER BY m_order_id DESC
    </select>

    <select id="orderDetail" resultMap="order">
        select *
        from m_order_header h LEFT JOIN m_order_item i ON h.m_order_id = i.m_order_id
        where h.m_order_id = #{m_order_id};
    </select>
    <resultMap id="order" type="com.soprj.sharedone_prj.domain.order.OrderHeaderDTO">
        <id column="m_order_id" property="m_order_id"/>
        <result property="m_buyer_id" column="m_buyer_id"/>
        <result property="m_order_date" column="m_order_date"/>
        <result property="m_order_inserted" column="m_order_inserted"/>
        <result property="m_order_status" column="m_order_status"/>
        <result property="m_member_id" column="m_member_id"/>
        <result property="m_order_buyerName" column="m_order_buyerName"/>
        <result property="m_order_buyerRegion" column="m_order_buyerRegion"/>
        <result property="m_order_buyerAddress" column="m_order_buyerAddress"/>
        <result property="m_order_buyerNumber" column="m_order_buyerNumber"/>
        <result property="m_order_buyerCurrency" column="m_order_buyerCurrency"/>
        <result property="m_order_comment" column="m_order_comment"/>
        <result property="m_order_sumPrice" column="m_order_sumPrice"/>

        <collection property="orderItemDTOList" ofType="com.soprj.sharedone_prj.domain.order.OrderItemDTO">
            <result property="m_order_id" column="m_order_id"/>
            <result property="m_order_count" column="m_order_count"/>
            <result property="m_price_id" column="m_price_id"/>
            <result property="m_order_price" column="m_order_price"/>
            <result property="m_order_itemId" column="m_order_itemId"/>
            <result property="m_order_itemName" column="m_order_itemName"/>
            <result property="m_order_itemGroup" column="m_order_itemGroup"/>
            <result property="m_order_itemManufacturer" column="m_order_itemManufacturer"/>
            <result property="m_order_totalPrice" column="m_order_totalPrice"/>
        </collection>
    </resultMap>

<!-- 승인상태 추가  -->
    <update id="orderAccept">
        UPDATE m_order_header
        SET m_order_status = #{m_order_status},
            m_order_memo = #{m_order_memo}
        WHERE m_order_id = #{m_order_id}
    </update>

<!--  주문리스트 삭제하기  -->

    <delete id="orderHeaderRemove">
        DELETE FROM m_order_header
        WHERE m_order_id = #{m_order_id}
    </delete>
    <delete id="orderItemRemove">
        DELETE FROM m_order_item
        WHERE m_order_id = #{m_order_id}
    </delete>
    <select id="orderHeader" resultType="com.soprj.sharedone_prj.domain.order.OrderHeaderDTO">
        SELECT * FROM m_order_header
        WHERE m_order_id = #{m_order_id}
    </select>


    <update id="updateHeader" useGeneratedKeys="true" keyProperty="m_order_id">
    UPDATE m_order_header SET
    m_order_inserted = #{m_order_inserted},
    m_order_comment = #{m_order_comment},
    m_order_sumPrice = #{m_order_sumPrice},
    m_order_status = #{m_order_status}
    WHERE m_order_id = #{m_order_id}
    <selectKey keyProperty="m_order_id" resultType="int" order="BEFORE">
        SELECT IFNULL(MAX(m_order_id+1), 1) FROM m_order_header
    </selectKey>
    </update>

    <update id="updateItem">
        UPDATE m_order_item SET
        m_order_count = #{m_order_count},
        m_order_price = #{m_order_price},
        m_order_itemId = #{m_order_itemId},
        m_order_itemName = #{m_order_itemName},
        m_order_itemGroup = #{m_order_itemGroup},
        m_order_itemManufacturer = #{m_order_itemManufacturer},
        m_order_totalPrice = #{m_order_totalPrice}
        WHERE m_order_id = #{m_order_id}
    </update>


</mapper>